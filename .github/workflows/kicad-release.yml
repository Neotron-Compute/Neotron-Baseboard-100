on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release

jobs:
  build:
    name: Upload Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set version number # Replace [Uncontrolled] with actual tag
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          sed -i "s~\[Uncontrolled\]~${GITHUB_REF/#refs\/tags\/}~g" Kicad/*.sch Kicad/*.kicad_pcb
      - name: Build project # This would actually build your project, using zip for an example artifact
        uses: nerdyscout/kicad-exports@v2.2
        with:
          config: 'Kicad/docs.yml'
          dir: docs
          schema: 'Kicad/Neotron-Baseboard-100.sch'
          board: 'Kicad/Neotron-Baseboard-100.kicad_pcb'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Build zip file
        run: |
          zip -r --junk-paths neotron-common-hardware-release.zip docs/
      - name: Upload Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./neotron-common-hardware-release.zip
          asset_name: neotron-common-hardware-release.zip
          asset_content_type: application/zip
